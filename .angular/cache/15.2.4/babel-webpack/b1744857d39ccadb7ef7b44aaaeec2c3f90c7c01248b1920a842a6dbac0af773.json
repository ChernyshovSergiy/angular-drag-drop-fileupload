{"ast":null,"code":"import _defineProperty from \"/home/brand/WebstormProjects/angular-drag-drop-fileupload/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"../drag-drop.service\";\nfunction DragDropComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 11);\n    i0.ɵɵelement(2, \"div\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.progress, \"%\");\n  }\n}\nfunction DragDropComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14);\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r2.sanitize(file_r3[\"url\"]), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r3.item.name);\n  }\n}\nexport class DragDropComponent {\n  constructor(fb, sanitizer, dragdropService) {\n    _defineProperty(this, \"fb\", void 0);\n    _defineProperty(this, \"sanitizer\", void 0);\n    _defineProperty(this, \"dragdropService\", void 0);\n    _defineProperty(this, \"fileArr\", []);\n    _defineProperty(this, \"imgArr\", []);\n    _defineProperty(this, \"fileObj\", []);\n    _defineProperty(this, \"form\", void 0);\n    _defineProperty(this, \"msg\", void 0);\n    _defineProperty(this, \"progress\", 0);\n    this.fb = fb;\n    this.sanitizer = sanitizer;\n    this.dragdropService = dragdropService;\n    this.form = this.fb.group({\n      avatar: [null]\n    });\n  }\n  ngOnInit() {}\n  upload(e) {\n    const fileListAsArray = Array.from(e);\n    fileListAsArray.forEach((item, i) => {\n      const file = e;\n      const url = URL.createObjectURL(file[i]);\n      this.imgArr.push(url);\n      this.fileArr.push({\n        item,\n        url: url\n      });\n    });\n    this.fileArr.forEach(item => {\n      this.fileObj.push(item.item);\n    });\n    // Set files form control\n    this.form.patchValue({\n      avatar: this.fileObj\n    });\n    this.form.get('avatar')?.updateValueAndValidity();\n    // Upload to server\n    this.dragdropService.addFiles(this.form.value.avatar).subscribe(event => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          console.log('Request has been made!');\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log('Response header has been received!');\n          break;\n        case HttpEventType.UploadProgress:\n          this.progress = Math.round(event.loaded / event.total * 100);\n          console.log(`Uploaded! ${this.progress}%`);\n          break;\n        case HttpEventType.Response:\n          console.log('File uploaded successfully!', event.body);\n          setTimeout(() => {\n            this.progress = 0;\n            this.fileArr = [];\n            this.fileObj = [];\n            this.msg = 'File uploaded successfully!';\n          }, 3000);\n      }\n    });\n  }\n  // Clean Url\n  sanitize(url) {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n_defineProperty(DragDropComponent, \"\\u0275fac\", function DragDropComponent_Factory(t) {\n  return new (t || DragDropComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i3.DragdropService));\n});\n_defineProperty(DragDropComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DragDropComponent,\n  selectors: [[\"app-drag-drop\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[1, \"container\", \"fileUploadWrapper\"], [3, \"formGroup\"], [1, \"row\"], [\"class\", \"col-md-12\", 4, \"ngIf\"], [1, \"col-md-12\"], [\"appDragDropFileUpload\", \"\", 1, \"fileupload\", 3, \"click\", \"fileDropped\"], [1, \"ddinfo\"], [\"type\", \"file\", \"name\", \"avatars\", \"hidden\", \"\", \"multiple\", \"\", 3, \"change\"], [\"fileField\", \"\"], [\"class\", \"image-list\", 4, \"ngFor\", \"ngForOf\"], [1, \"message\"], [1, \"progress\", \"form-group\"], [\"role\", \"progressbar\", 1, \"progress-bar\", \"progress-bar-striped\", \"bg-success\"], [1, \"image-list\"], [1, \"profile\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function DragDropComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, DragDropComponent_div_3_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5);\n      i0.ɵɵlistener(\"click\", function DragDropComponent_Template_div_click_5_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r1 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(_r1.click());\n      })(\"fileDropped\", function DragDropComponent_Template_div_fileDropped_5_listener($event) {\n        return ctx.upload($event);\n      });\n      i0.ɵɵelementStart(6, \"span\", 6);\n      i0.ɵɵtext(7, \"Choose a file or drag here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7, 8);\n      i0.ɵɵlistener(\"change\", function DragDropComponent_Template_input_change_8_listener($event) {\n        return ctx.upload($event.target.files);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 4);\n      i0.ɵɵtemplate(11, DragDropComponent_div_11_Template, 5, 2, \"div\", 9);\n      i0.ɵɵelementStart(12, \"p\", 10);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.progress);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fileArr);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.msg);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}));","map":{"version":3,"mappings":"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","names":["HttpEventType","i0","DragDropComponent","constructor","fb","sanitizer","dragdropService","form","group","avatar","ngOnInit","upload","e","fileListAsArray","Array","from","forEach","item","i","file","url","URL","createObjectURL","imgArr","push","fileArr","fileObj","patchValue","get","updateValueAndValidity","addFiles","value","subscribe","event","type","Sent","console","log","ResponseHeader","UploadProgress","progress","Math","round","loaded","total","Response","body","setTimeout","msg","sanitize","bypassSecurityTrustUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/brand/WebstormProjects/angular-drag-drop-fileupload/src/app/drag-drop/drag-drop.component.ts","/home/brand/WebstormProjects/angular-drag-drop-fileupload/src/app/drag-drop/drag-drop.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { DragdropService } from '../drag-drop.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-drag-drop',\n  templateUrl: './drag-drop.component.html',\n  styleUrls: ['./drag-drop.component.scss'],\n})\nexport class DragDropComponent implements OnInit {\n  fileArr: any[] = [];\n  imgArr: any[] = [];\n  fileObj: any[] = [];\n  form: FormGroup;\n  msg!: string;\n  progress: any = 0;\n\n  constructor(\n    public fb: FormBuilder,\n    private sanitizer: DomSanitizer,\n    public dragdropService: DragdropService\n  ) {\n    this.form = this.fb.group({\n      avatar: [null],\n    });\n  }\n\n  ngOnInit() {}\n\n  upload(e: any) {\n    const fileListAsArray = Array.from(e);\n    fileListAsArray.forEach((item, i) => {\n      const file = e as HTMLInputElement;\n      const url = URL.createObjectURL(file[i]);\n      this.imgArr.push(url);\n      this.fileArr.push({ item, url: url });\n    });\n\n    this.fileArr.forEach((item) => {\n      this.fileObj.push(item.item);\n    });\n\n    // Set files form control\n    this.form.patchValue({\n      avatar: this.fileObj,\n    });\n\n    this.form.get('avatar')?.updateValueAndValidity();\n\n    // Upload to server\n    this.dragdropService\n      .addFiles(this.form.value.avatar)\n      .subscribe((event: HttpEvent<any>) => {\n        switch (event.type) {\n          case HttpEventType.Sent:\n            console.log('Request has been made!');\n            break;\n          case HttpEventType.ResponseHeader:\n            console.log('Response header has been received!');\n            break;\n          case HttpEventType.UploadProgress:\n            this.progress = Math.round((event.loaded / event.total) * 100);\n            console.log(`Uploaded! ${this.progress}%`);\n            break;\n          case HttpEventType.Response:\n            console.log('File uploaded successfully!', event.body);\n            setTimeout(() => {\n              this.progress = 0;\n              this.fileArr = [];\n              this.fileObj = [];\n              this.msg = 'File uploaded successfully!';\n            }, 3000);\n        }\n      });\n  }\n\n  // Clean Url\n  sanitize(url: string) {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n","<div class=\"container fileUploadWrapper\">\n  <form [formGroup]=\"form\">\n    <div class=\"row\">\n      <!-- Progress Bar -->\n      <div class=\"col-md-12\" *ngIf=\"progress\">\n        <div class=\"progress form-group\">\n          <div\n            class=\"progress-bar progress-bar-striped bg-success\"\n            role=\"progressbar\"\n            [style.width.%]=\"progress\"\n          ></div>\n        </div>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div\n          class=\"fileupload\"\n          appDragDropFileUpload\n          (click)=\"fileField.click()\"\n          (fileDropped)=\"upload($event)\"\n        >\n          <span class=\"ddinfo\">Choose a file or drag here</span>\n          <input\n            type=\"file\"\n            name=\"avatars\"\n            #fileField\n            (change)=\"upload($any($event).target.files)\"\n            hidden\n            multiple\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-12\">\n        <div class=\"image-list\" *ngFor=\"let file of fileArr; let i = index\">\n          <div class=\"profile\">\n            <img [src]=\"sanitize(file['url'])\" alt=\"\" />\n          </div>\n          <p>{{ file.item.name }}</p>\n        </div>\n        <p class=\"message\">{{ msg }}</p>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}