{"ast":null,"code":"import _defineProperty from \"/home/brand/WebstormProjects/angular-drag-drop-fileupload/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\nexport class SplashScreenComponent {\n  // This is the option that uses the package's AnimationOption interface\n\n  constructor() {\n    _defineProperty(this, \"lottieConfig\", void 0);\n    _defineProperty(this, \"anim\", void 0);\n    _defineProperty(this, \"animationSpeed\", 1);\n    this.lottieConfig = {\n      path: '../../assets/data.json',\n      autoplay: true,\n      loop: true\n    };\n  }\n  handleAnimation(anim) {\n    this.anim = anim;\n  }\n  stop() {\n    this.anim.stop();\n  }\n  play() {\n    this.anim.play();\n  }\n  pause() {\n    this.anim.pause();\n  }\n  setSpeed(speed) {\n    this.animationSpeed = speed;\n    this.anim.setSpeed(speed);\n  }\n}\n_defineProperty(SplashScreenComponent, \"\\u0275fac\", function SplashScreenComponent_Factory(t) {\n  return new (t || SplashScreenComponent)();\n});\n_defineProperty(SplashScreenComponent, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SplashScreenComponent,\n  selectors: [[\"app-splash-screen\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[3, \"options\", \"width\", \"height\", \"animCreated\"], [\"id\", \"player\"], [1, \"range-container\"], [\"type\", \"range\", \"value\", \"1\", \"min\", \"0\", \"max\", \"3\", \"step\", \"0.5\", 3, \"change\"], [\"range\", \"\"], [3, \"click\"]],\n  template: function SplashScreenComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"lottie-animation-view\", 0);\n      i0.ɵɵlistener(\"animCreated\", function SplashScreenComponent_Template_lottie_animation_view_animCreated_0_listener($event) {\n        return ctx.handleAnimation($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"input\", 3, 4);\n      i0.ɵɵlistener(\"change\", function SplashScreenComponent_Template_input_change_5_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.setSpeed(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SplashScreenComponent_Template_button_click_7_listener() {\n        return ctx.stop();\n      });\n      i0.ɵɵtext(8, \"stop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SplashScreenComponent_Template_button_click_9_listener() {\n        return ctx.pause();\n      });\n      i0.ɵɵtext(10, \"pause\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SplashScreenComponent_Template_button_click_11_listener() {\n        return ctx.play();\n      });\n      i0.ɵɵtext(12, \"play\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.lottieConfig)(\"width\", 300)(\"height\", 600);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Speed: x\", ctx.animationSpeed, \"\");\n    }\n  },\n  styles: [\"#player[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.range-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.range-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 200px;\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3NwbGFzaC1zY3JlZW4vc3BsYXNoLXNjcmVlbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhQTtFQUNFLGtCQUFBO0FBWkY7O0FBY0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFYRjs7QUFhQTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtBQVZGIiwic291cmNlc0NvbnRlbnQiOlsiLy86aG9zdCB7XG4vLyAgaGVpZ2h0OiAxMDAlO1xuLy8gIG92ZXJmbG93OiBoaWRkZW47XG4vLyAgZGlzcGxheTogZmxleDtcbi8vICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4vLyAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbi8vICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbi8vICBwb3NpdGlvbjogcmVsYXRpdmU7XG4vLyAgY29sb3I6ICNmZmZmZmY7XG4vL31cbi8vLmxvdHRpZS1hbmltYXRpb257XG4vLyAgY29sb3I6ICNmZmZmZmY7XG4vL31cbiNwbGF5ZXJ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5yYW5nZS1jb250YWluZXJ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLnJhbmdlLWNvbnRhaW5lciBpbnB1dHtcbiAgd2lkdGg6MjAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n}));","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,qBAAqB;EAEhC;;EAKAC;IAAA;IAAA;IAAA,wCAFiC,CAAC;IAGhC,IAAI,CAACC,YAAY,GAAG;MAClBC,IAAI,EAAE,wBAAwB;MAC9BC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE;KACP;EACH;EAEAC,eAAe,CAACC,IAAS;IACvB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,IAAI;IACF,IAAI,CAACD,IAAI,CAACC,IAAI,EAAE;EAClB;EAEAC,IAAI;IACF,IAAI,CAACF,IAAI,CAACE,IAAI,EAAE;EAClB;EAEAC,KAAK;IACH,IAAI,CAACH,IAAI,CAACG,KAAK,EAAE;EACnB;EAEAC,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC3B,IAAI,CAACL,IAAI,CAACI,QAAQ,CAACC,KAAK,CAAC;EAC3B;;gBAlCWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAAA,gBAArBA,qBAAqB;QAArBA,qBAAqB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCwBlCC,gDAI0C;MAAxCA;QAAA,OAAeC,2BAAuB;MAAA,EAAC;MACzCD,iBAAwB;MACxBA,8BAAiB;MACZA,YAA0B;MAAAA,iBAAI;MACjCA,8BAA6B;MAEpBA;QAAAA;QAAA;QAAA,OAAUA,sCAAqB;MAAA,EAAC;MADvCA,iBACwC;MAE1CA,iCAAyB;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,oBAAI;MAAAA,iBAAS;MACtCA,iCAA0B;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MACxCA,kCAAyB;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MAbtCA,0CAAwB;MAMrBA,eAA0B;MAA1BA,yDAA0B","names":["SplashScreenComponent","constructor","lottieConfig","path","autoplay","loop","handleAnimation","anim","stop","play","pause","setSpeed","speed","animationSpeed","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/brand/WebstormProjects/angular-drag-drop-fileupload/src/app/shared/splash-screen/splash-screen.component.ts","/home/brand/WebstormProjects/angular-drag-drop-fileupload/src/app/shared/splash-screen/splash-screen.component.html"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AnimationOptions} from \"ngx-lottie\";\nimport {AnimationItem} from \"lottie-web\";\n\n@Component({\n  selector: 'app-splash-screen',\n  templateUrl: './splash-screen.component.html',\n  styleUrls: ['./splash-screen.component.scss']\n})\nexport class SplashScreenComponent {\n\n  // This is the option that uses the package's AnimationOption interface\n  public lottieConfig: Object;\n  private anim: any;\n  private animationSpeed: number = 1;\n\n  constructor() {\n    this.lottieConfig = {\n      path: '../../assets/data.json',\n      autoplay: true,\n      loop: true\n    };\n  }\n\n  handleAnimation(anim: any) {\n    this.anim = anim;\n  }\n\n  stop() {\n    this.anim.stop();\n  }\n\n  play() {\n    this.anim.play();\n  }\n\n  pause() {\n    this.anim.pause();\n  }\n\n  setSpeed(speed: number) {\n    this.animationSpeed = speed;\n    this.anim.setSpeed(speed);\n  }\n\n  // @Input()   options: AnimationOptions = {\n  //   path: '../../assets/data.json',\n  //   // @ts-ignore\n  //   renderer: 'canvas',\n  //   autoplay: true,\n  //   loop: true\n  // };\n  // @Input() titleText = 'Step 1';\n  // @Input() stepParagraph = 'Lorem ipsum blah blah blah';\n  // @Input() secondaryButtonText = 'Previous';\n  // @Input() primaryButtonText = 'Next';\n  // @Output() animationCreated = new EventEmitter();\n  // @Output() secondaryClick = new EventEmitter();\n  // @Output() primaryClick = new EventEmitter();\n  //\n  // constructor() { }\n  //\n  // ngOnInit(): void {  }\n  //\n  // // This is the component function that binds to the animationCreated event from the package\n  // // onAnimate(animationItem: AnimationItem): void {\n  // //   console.log(animationItem);\n  // // }\n  // onAnimate(animationItem: AnimationItem): void {\n  //   console.log(animationItem);\n  //   this.animationCreated.emit(animationItem);\n  // }\n  //\n  // onSecondaryClick(clickedSecondaryEvent): void {\n  //   this.secondaryClick.emit(clickedSecondaryEvent);\n  // }\n  //\n  // onPrimaryClick(clickedPrimaryEvent): void {\n  //   this.primaryClick.emit(clickedPrimaryEvent);\n  // }\n}\n","<!--<div class=\"lottie-animation mt-10\">-->\n<!--  <lottie-animation-view [options]=\"options\"-->\n<!--             [width]=\"200\"-->\n<!--             [height]=\"200\"-->\n<!--             (animCreated)=\"onAnimate($event)\">-->\n<!--  </lottie-animation-view>-->\n<!--</div>-->\n\n<!--<div class=\"container-sm\" style=\"text-align: center\">-->\n<!--  <div class=\"splash-text\">-->\n<!--    <h1>-->\n<!--      {{ titleText }}-->\n<!--    </h1>-->\n<!--    {{ stepParagraph }}-->\n<!--  </div>-->\n<!--  <div class=\"button-div mt-3 mb-10\">-->\n<!--    <a-->\n<!--      class=\"btn btn-md accent light\"-->\n<!--      style=\"margin: 1rem\"-->\n<!--      (click)=\"onSecondaryClick($event)\"-->\n<!--    >-->\n<!--      {{ secondaryButtonText }}-->\n<!--    </a>-->\n\n<!--    <a-->\n<!--      class=\"btn btn-md primary\"-->\n<!--      style=\"margin: 1rem\"-->\n<!--      (click)=\"onPrimaryClick($event)\"-->\n<!--    >-->\n<!--      {{ primaryButtonText }}-->\n<!--    </a>-->\n<!--  </div>-->\n<!--</div>-->\n<lottie-animation-view\n  [options]=\"lottieConfig\"\n  [width]=\"300\"\n  [height]=\"600\"\n  (animCreated)=\"handleAnimation($event)\">\n</lottie-animation-view>\n<div id=\"player\">\n  <p>Speed: x{{animationSpeed}}</p>\n  <div class=\"range-container\">\n    <input #range type=\"range\" value=\"1\" min=\"0\" max=\"3\" step=\"0.5\"\n           (change)=\"setSpeed(range.value)\">\n  </div>\n  <button (click)=\"stop()\">stop</button>\n  <button (click)=\"pause()\">pause</button>\n  <button (click)=\"play()\">play</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}